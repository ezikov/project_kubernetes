# voting-app
---
apiVersion: v1
kind: Service
metadata:
  name: voting-service
  labels:
    name: voting-service
    app: demo-voting-app
spec:
    type: LoadBalancer
    ports:
      - port: 80
        targetPort: 80
    selector:
        name: voting-app-pod
        app: demo-voting-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-app-deploy
  labels:
    name: voting-app-deploy
    app: demo-voting-app
spec:
  replicas: 1
  selector:
      matchLabels:
        name: voting-app-pod
        app: demo-voting-app
  template:
    metadata:
        name: voting-app-pod
        labels:
            name: voting-app-pod
            app: demo-voting-app
    spec: 
        containers:
             - name: voting-app
               image: ezikov/vote:1.0
               ports:
                  - containerPort: 80


#redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    name: redis-service
    app: demo-voting-app
spec: 
    ports:
      - port: 6379
        targetPort: 6379
    selector:
        name: redis-pod
        app: demo-voting-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deploy
  labels:
    name: redis-deploy
    app: demo-voting-app
spec:
  replicas: 1
  selector:
      matchLabels:
        name: redis-pod
        app: demo-voting-app
  template:
    metadata:
        name: redis-pod
        labels:
            name: redis-pod
            app: demo-voting-app
    spec: 
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379


#worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-app-deploy
  labels:
    name: worker-app-deploy
    app: demo-voting-app
spec:
  replicas: 1
  selector:
      matchLabels:
        name: worker-app-pod
        app: demo-voting-app
  template:
    metadata:
        name: worker-app-pod
        labels:
            name: worker-app-pod
            app: demo-voting-app
    spec: 
      containers:
        - name: worker-app
          image: dockersamples/examplevotingapp_worker


#db
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    name: postgres-service
    app: demo-voting-app
spec: 
    ports:
      - port: 5432
        targetPort: 5432
    selector:
        name: postgres-pod
        app: demo-voting-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deploy
  labels:
    name: postgres-deploy
    app: demo-voting-app
spec:
  replicas: 1
  selector:
      matchLabels:
        name: postgres-pod
        app: demo-voting-app
  template:
    metadata:
        name: postgres-pod
        labels:
            name: postgres-pod
            app: demo-voting-app
    spec: 
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "postgres"
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust


#result-app
---
apiVersion: v1
kind: Service
metadata:
  name: result-service
  labels:
    name: result-service
    app: demo-voting-app
spec:
    type: LoadBalancer
    ports:
      - port: 80
        targetPort: 80
    selector:
        name: result-app-pod
        app: demo-voting-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-app-deploy
  labels:
    name: result-app-deploy
    app: demo-voting-app
spec:
  replicas: 1
  selector:
      matchLabels:
        name: result-app-pod
        app: demo-voting-app
  template:
    metadata:
        name: result-app-pod
        labels:
            name: result-app-pod
            app: demo-voting-app
    spec: 
        containers:
             - name: result-app
               image: dockersamples/examplevotingapp_result
               ports:
                  - containerPort: 80